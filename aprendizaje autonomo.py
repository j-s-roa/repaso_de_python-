# -*- coding: utf-8 -*-
"""repaso python.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/14jxawD8ITsmfyDEcuIRJi8uohBpE7OgH

Entrada de datos
"""

celular=int(input("ingrese el numero de celular: "))

print(celular)

"""Repaso 1"""

print("----------------------------------------")
print("-----------Calcular Monto a pagar")

print("ingrese el costo unit del articulo:")
c= float(input())
print("ingrese el numero de docenas:")
d= int(input())

p= d*12

f=p*c

print("\Salida: ")
print("------------------")
print("El proceso del articulo es: ",f)

"""Repaso 2 :Escribe un texto con espacio de linea"""

print("hola mundo\n\n", "hola world\n")

print("hola", end=' ')
print ('hola')

"""Repaso: funcion print sep"""

print('a','hola hermosa naturaleza','a',sep='````````````')

"""REpaso: imprime la vida es muy hermosa un regalo divino

"""

print('a',' la vida es muy hermosa es un regalo divino',7.9,sep='\n\n')

"""Repaso: salida de datos con formato"""

savingsdad = 200
dinnermom = 100
dinnergirlfriend = 500
dinnersister = 50

result = savingsdad+dinnermom+dinnergirlfriend+dinnersister

print("dad has $ %d. \nmom gave him $ %d. His girlfriend gave him $ %d.\n "
       "sister took dad to a bar and they spent $ %d.\n"
       "dad calculated his savings. he has $ %d."%(savingsdad, dinnermom, dinnergirlfriend, dinnersister, result))

"""### ACTIVIDADES ENTREGABLES

Diseñar 5 algoritmos que apliquen cada una de las funciones de entrada, salida y formato de datos.

ALGORITMO 1.A
"""

#primer algoritmo
print("algoritmo 1")
print("panaderia")
costo_panes=400
pedido_panes = int(input("ingrese el numero de panes que desea comprar: "))
total_a_pagar = pedido_panes*costo_panes
print(total_a_pagar)


#salida
print("gracias","por","su","compra","vuelva pronto",sep='\n')
#salida con formato
savingspan = 200
dinnerclient1 = 100
dinnerclient2 = 500
dinnerclient3 = 50

result = savingspan+dinnerclient1+dinnerclient2+dinnerclient3

print("panaderia has $ %d. \client1 gave him $ %d. His client2 gave him $ %d.\n "
       "client3 took panaderia to a bar and they spent $ %d.\n"
       "panaderia calculated his savings. he has $ %d."%(savingspan, dinnerclient1, dinnerclient2, dinnerclient3, result))

"""algoritmo 2.A"""

#entradas
print("welcome to sexshop roa a hot rise")

print("articulo a comprar:")
e=input()
print("precio del articulo")
p=int(input())
print("cantidad articulo:")
r=int(input())
# formato datos
m=p*r
#salida
print("\nsalida:")
print("--------")
print("precio total de compra: ",e,":",m)

"""algoritmo 3.A"""

#entradas

print("articulo a comprar:")
e=input()
print("precio del articulo")
p=int(input())
print("cantidad articulo:")
r=int(input())
# formato datos
m=p*r
#salida
print("\nsalida:")
print("--------")
print("precio total de compra: ",e,":",m)

print("algoritmo celler")
print("panaderia")
costo_panes=400
pedido_panes = int(input("ingrese el numero de panes que desea comprar: "))
total_a_pagar = pedido_panes*costo_panes
print(total_a_pagar)


#salida
print("gracias","por","su","compra","vuelva pronto",sep='\n')
#salida con formato
savingspan = 200
dinnerclient1 = 100
dinnerclient2 = 500
dinnerclient3 = 50

result = savingspan+dinnerclient1+dinnerclient2+dinnerclient3

print("panaderia has $ %d. \client1 gave him $ %d. His client2 gave him $ %d.\n "
       "client3 took panaderia to a bar and they spent $ %d.\n"
       "panaderia calculated his savings. he has $ %d."%(savingspan, dinnerclient1, dinnerclient2, dinnerclient3, result))

"""algoritmo 4.A"""

print("it is a seller algoritm")
input("write the article to sell: ")
data=10
product1= int(input("write a price of the article: "))
product2
iva= product / data
total_price= iva + product
print("the total price: ", total_price)

"""algoritmo 5.A"""

#entradas

print("articulo de lenceria a comprar:")
e=input()
print("precio del articulo")
p=int(input())
print("cantidad articulo:")
r=int(input())
# formato datos
m=p*r
#salida
print("\nsalida:")
print("--------")
print("precio total de compra: ",e,":",m)

print("algoritmo celler")
print("lenceria")
costo_lenceria=100.000
pedido_lenceria= float(input("ingrese el numero de lenceria que desea comprar: "))
total_a_pagar = pedido_lenceria*costo_lenceria
print(total_a_pagar)


#salida
print("gracias","por","su","compra","vuelva pronto",sep='\n')
#salida con formato
savingslenceria = 200.000
dinnerclient1 = 100.000
dinnerclient2 = 500.000
dinnerclient3 = 500.000

result = savingspan+dinnerclient1+dinnerclient2+dinnerclient3

print("lenceria has $ %d. \client1 gave him $ %d. His client2 gave him $ %d.\n "
       "client3 took panaderia to a bar and they spent $ %d.\n"
       "panaderia calculated his savings. he has $ %d."%(savingslenceria, dinnerclient1, dinnerclient2, dinnerclient3, result))
print("it is a seller algoritm")
input("write the article to sell: ")
data=10.5
product1= float(input("write a price of the article: "))
product2= float(input("write a price of the product: "))
iva= product1*product2 / data
total_price= iva + product1+product2
print("the total price: ", total_price)

"""Repaso 2.1: crea una lista en el que hayan distintos tipos de digitos"""

Lista_con_elementos=[1,2,True,'hola',12]
print(Lista_con_elementos)

"""Repaso 2.1.2: llama un indice en especifico"""

lista_shift=['juan\n','pedro\n','laura\n','carmen\n','susana']
print(lista_shift[-3])

"""Repaso 2.1.3: llama a todos los elementos de manera individual"""

mi_lista=['juan','pedro','laura\n','carmen\n','susana\n']
print(mi_lista[1])
print(mi_lista[3])
print(mi_lista[4])
print(mi_lista[2])
print(mi_lista[0])

"""Repaso 2.1.4: Genera operaciones con listas"""

lista1=[1.2,3]
lista2=[2,3,4]

print(lista1+lista2)

"""Repaso 3:utilizar metodo append() """

lista_appnd=[2000,2001,2002,2003,2004,2005]

print(lista_appnd)
lista_appnd.append('Erick')
lista_appnd.append(2006)
lista_appnd.append(True)
lista_appnd.append(2006)
print(lista_appnd)

"""Repaso 3.1: utilizar el metodo append() multiple """

lista_appnd1=[]

lista_appnd1.append(1)
lista_appnd1.append(2)
lista_appnd1.append(3)
lista_appnd1.append(4)
lista_appnd1.append(5)
lista_appnd1.append(6)
lista_appnd1.append(True)

print(lista_appnd1)

"""Repaso 3.2: utilizar el metodo Del()"""

lista_del=[12,13,11,41]

print(lista_del)

del lista_del[0]

print(lista_del)

"""Repaso 3.2.1:utilizar el metodo pop() """

lista_del=[12,13,11,41]
print(lista_del)

lista_del.pop()


print(lista_del)

"""METODO LEN"""

# Leer una cadena de caracteres desde el teclado
cadena = [1,2,3,5,False,"len"]

# Calcular la longitud de la cadena
longitud = len(cadena)

# Imprimir la longitud de la cadena
print("La longitud de la cadena es:", longitud)

"""Metodo index

"""

# Leer una cadena de caracteres desde el teclado
cadena = [2500,20,True,"algoritm"]

# Leer un caracter desde el teclado
caracter = input("Ingrese un caracter a buscar en la cadena: ")

# Buscar el índice del caracter en la cadena
indice = cadena.index(caracter)

# Imprimir el índice del caracter en la cadena
print("El índice del caracter '", caracter, "' en la cadena es:", indice)